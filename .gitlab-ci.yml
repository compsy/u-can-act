include:
  - project: researchable/general/templates/gitlab/base
    ref: master
    file: docker/build.yml

# include:
    # Adds the 'semantic releases' to the release stage
  # - project: 'researchable/general/templates/gitlab/semantic-release'
  #   ref: master
  #   file: 'semantic_release.yml'
  # Adds the 'docker deploy' based on the versions in the semantic relase to the deploy stage
  # - project: 'researchable/general/templates/gitlab/docker-deploy'
  #   ref: master
  #   file: 'docker_deploy.yml'

# define pipline stages
stages:
  - build
  # - test
  - release
  - deploy
  - post-deploy

variables:
  KUBE_NAMESPACE: sdv-mvp-$CI_COMMIT_REF_NAME
  PROJECT_NAME: sport-data-valley
  CI: 'true'

  # docker build variables
  IMAGE_NAME: researchableuser/sdv-svc-questionnaires
  IMAGE_TAGS: $CI_COMMIT_SHA
  REGISTRY_USERNAME: $DOCKER_HUB_USERNAME
  REGISTRY_PASSWORD: $DOCKER_HUB_PASSWORD
  REGISTRY_HOST: docker.io

build_web_job:
  extends: .docker_build_job
  variables:
    BUILD_ARG_RAILS_ENV: production
    BUILD_ARG_NODE_ENV: production
    BUILD_ARG_SECRET_KEY_BASE: 3dfd3556ee07900fdf08fac96a1f7fa6b8b930b8ee63b6b5c6fef5168b78769f2159ec90d0717c201913ce13147fdf54c0d444001b413b885142b75e9a689458
    BUILD_ARG_HOST_URL: http://localhost:3002
    BUILD_ARG_HOST_DOMAIN: localhost
    BUILD_ARG_INFO_EMAIL: info@vsv.io
    BUILD_ARG_FEEDBACK_EMAIL: feedback@u-can-act.nl
    BUILD_ARG_POSTGRES_DATABASE: vsv
    BUILD_ARG_MONGO_DATABASE: vsv
    BUILD_ARG_MESSAGEBIRD_ACCESS_KEY: live_accesskey
    BUILD_ARG_MESSAGEBIRD_SEND_FROM: u-can-act
    BUILD_ARG_PERSON_SALT: some_salt
    BUILD_ARG_STOP_SUBSCRIPTION_SALT: 9c2787d9be7bfb748cc2058b7df3feefa2800cfc3a45f9b3b507b50a92640f2f864bd107477337dc024c7998fefff8101ab8b91e2bc282d57277a4cdceec38b4
    BUILD_ARG_ADMIN_USERNAME: admin
    BUILD_ARG_ADMIN_PASSWORD: admin
    BUILD_ARG_MAILGUN_API_KEY: key
    BUILD_ARG_MAILGUN_DOMAIN: sandbox43bf51fb258844f0bc393e806ebd25bb.mailgun.org
    BUILD_ARG_FROM_EMAIL_ADDRESS: info@u-can-act.nl
    BUILD_ARG_TOKEN_SIGNATURE_ALGORITHM: RS256
    BUILD_ARG_AUTH0_CLIENT_ID: CCMYoMGi6mApMRFdnqpAHFtjeFceFGPr
    BUILD_ARG_AUTH0_DOMAIN: ikia-development.eu.auth0.com
    BUILD_ARG_AUTH0_CLIENT_SECRET: -opwFYMuXOWCvDzTpRmVrEkPqTvSD4dZps0u2RMZpSwmEfmLmoj20DVdEDUOnZwt
    BUILD_ARG_AUTH0_REDIRECT_URL: http://localhost:3002/admin/callback
    BUILD_ARG_AUTH0_AUDIENCE: https://ikia-development.eu.auth0.com/api/v2/
    # NOTE! Base64 encode this
    BUILD_ARG_AUTH0_SIGNING_CERTIFICATE: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGVENDQWYyZ0F3SUJBZ0lKS0h3R3pPdXNDclpBTUEwR0NTcUdTSWIzRFFFQkN3VUFNQ2d4SmpBa0JnTlYKQkFNVEhXbHJhV0V0WkdWMlpXeHZjRzFsYm5RdVpYVXVZWFYwYURBdVkyOXRNQjRYRFRFNU1EWXhOekV6TURVeApNVm9YRFRNek1ESXlNekV6TURVeE1Wb3dLREVtTUNRR0ExVUVBeE1kYVd0cFlTMWtaWFpsYkc5d2JXVnVkQzVsCmRTNWhkWFJvTUM1amIyMHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEcDJQODAKSjlZc29zQ0g2MlFhSjFEUjVVK0srRkZoNG8wTE84dzltWHdVT01tUEw0dVlzZ2Z0QWlOZ0ZRWjRmTituNHVaRwpCYWxUaVlXSVZRN3M3VG9taDVreUk1bC9UUmxiZ0UzWlo0S2N6amF5dFhzWW5FVDF3SEtVTWFyemZoNzJTK21QCm55VWNKNG1Pek5jUFNLT3Vla2FLWmUySUY2VWkxeUZWLzNSQ2dXN1ZoQkFlUEMxVTNZdzRKQ0pVTnV5amppcHcKMmhVazBzNFUrYXU2ZVBlekI1TmRvZzZnTVBGTDMzVnRha3VQSlRxTWpoRThjeHEvaDJiOWJIV0kyL1ZTUUNmZwo3dmwvT3hVUEhGaWdWZGRaVCs1ZEdiWXZuY3k3eTVPQ3VjV1Q1TXZSM0tKS3hRd2gyRllLSnlXSFk0eko4MlRaCmxxdlNBcGRvbCtnajJNQlpBZ01CQUFHalFqQkFNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUUKRkEwY1liMzI2c1JQKzlBVTlScGtrR1hXb3o3b01BNEdBMVVkRHdFQi93UUVBd0lDaERBTkJna3Foa2lHOXcwQgpBUXNGQUFPQ0FRRUFlTmkwcW9ZU3hmU25ZYXFNOWJUK1RDRUJ5YitLeC9KU0NZUG9uVFZMTUkrbHJNMFE5QnlnCnM1aXpjbCszbzlvczZOU3pVcno3NC9TOE03a211QUJiUHNCak0vQnJGeXZCQTdnaTVaVDFocjhxaG44L05tdmsKS0NwMnZ0Qno3Y2tObHFzNjlWTmxEYzJvQ1dISVh2WDUyTE80MDRyZjM4OFRkTWZvQng0Nld1YmZGUEM1YjI5Rgo4eDdNMTd4N1FadDBYTk9JamtXVDdOM28zcHVQYlJEVEZCUlkyWVo5VjFMRDZ0MG5ycFMxemx1Q0tzb1ozSWphCkVQa1IwR0NuaDNaUGdXcXBUUDBnaW4vWFliejcxTUtuUHIrVVV1VlhpR3I1Ym5UUU9IU0lMVjNvQi9PTzNWWm0KbWpoQ2oxcTlGbVhObnZJR21vZGV2YmU2b0gxZnZLOGVkQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
    BUILD_ARG_REDIS_HOST: 'redis'
    BUILD_ARG_REDIS_PORT: '6379'
    BUILD_ARG_REDIS_PASSWORD: 'redispassword'
    BUILD_ARG_TEST_PHONE_NUMBERS: '0654125412'
    BUILD_ARG_SNITCH_KEY: 'empty'
    BUILD_ARG_API_KEY: 'admin'
    BUILD_ARG_API_SECRET: 'admin'
    BUILD_ARG_IP_HASH_SALT: 'zout'
    BUILD_ARG_INFO_SITE_URL: 'https://u-can-act.nl'
    BUILD_ARG_PUSH_SUBSCRIPTION_URL: 'http://web:3000/api/v1/data/create_raw'
    BUILD_ARG_BASE_PLATFORM_URL: 'http://localhost:3000'
    BUILD_ARG_SHARED_SECRET: 'shared secret for generating email invite tokens'
    BUILD_ARG_REGISTRATION_URL: 'http://localhost:3001/email-registratie'
    BUILD_ARG_IKIA_CALLBACK_URL: 'http://localhost:3001/vragenlijsten?klaar'
    BUILD_ARG_IKIA_CALLBACK_CHILD_URL: 'http://localhost:3001/kind-uitnodigen?klaar'
    BUILD_ARG_IKIA_CALLBACK_DIARY_URL: 'http://localhost:3001/mijn-dagboekonderzoek'

  only:
    refs:
      - master
      - production
      - develop

.deploy_job: &deploy_job
  stage: deploy
  image:
    name: lachlanevenson/k8s-kubectl:latest
    entrypoint: ["/bin/sh", "-c"]
  script:
    # Replace the name of the namespace in the configuration of the CI runner.
    # This allows us to also deploy to other namespaces.
    - >-
      sed -i "s/namespace:.*/namespace: "${KUBE_NAMESPACE}"/" $KUBECONFIG
    - echo "Deploying to namespace ${KUBE_NAMESPACE}"
    - create_application_secret
    - kubectl version
    - cd manifests/
    - export CI_COMMIT_REF_NAME_UP=`echo $CI_COMMIT_REF_NAME | awk '{ print toupper($0) }'`
    - echo $CI_COMMIT_REF_NAME_UP
    - sed -i "s/__CI_COMMIT_SHA__/${CI_COMMIT_SHA}/" deployment.yaml ingress_${CI_COMMIT_REF_NAME_UP}.yaml service.yaml worker.yaml cron.yaml
    - sed -i "s/__CI_COMMIT_REF_NAME__/${CI_COMMIT_REF_NAME_UP}/" deployment.yaml ingress_${CI_COMMIT_REF_NAME_UP}.yaml service.yaml worker.yaml cron.yaml
    - sed -i "s/__CI_COMMIT_DOWN_REF_NAME__/${CI_COMMIT_REF_NAME}/" deployment.yaml ingress_${CI_COMMIT_REF_NAME_UP}.yaml service.yaml worker.yaml cron.yaml
    - kubectl apply -f deployment.yaml -f ingress_${CI_COMMIT_REF_NAME_UP}.yaml -f service.yaml -f worker.yaml -f cron.yaml
    - kubectl rollout status -f deployment.yaml
    - kubectl get all,ing -l app=${CI_ENVIRONMENT_SLUG}

# This is needed for gitlab to be able to find the correct kube config
deploy_job:develop:
  <<: *deploy_job
  environment:
    name: develop
  after_script:
    - kubectl scale --replicas=2 deployment/svc-questionnaires -n sdv-mvp-develop
  only:
    refs:
      - develop

# This is needed for gitlab to be able to find the correct kube config
deploy_job:master:
  <<: *deploy_job
  environment:
    name: master
  only:
    refs:
      - master

.deploy_helpers: &deploy_helpers |
  # Extracts variables prefixed with K8S_SECRET_
  # and creates a Kubernetes secret.
  #
  # e.g. If we have the following environment variables:
  #   K8S_SECRET_A=value1
  #   K8S_SECRET_B=multi\ word\ value
  #
  # See: https://gitlab.com/gitlab-org/gitlab-ce/blob/master/lib/gitlab/ci/templates/Jobs/Deploy.gitlab-ci.yml
  #
  # Then we will create a secret with the following key-value pairs:
  #   data:
  #     A: dmFsdWUxCg==
  #     B: bXVsdGkgd29yZCB2YWx1ZQo=
  function create_application_secret() {
    track="${1-stable}"
    export APPLICATION_SECRET_NAME=svc-questionnaires-secret

    env | sed -n "s/^K8S_SECRET_\(.*\)$/\1/p" > k8s_prefixed_variables
    cat k8s_prefixed_variables
    echo "Creating secret $APPLICATION_SECRET_NAME in namespace $KUBE_NAMESPACE on track $track"
    kubectl create secret \
      -n "$KUBE_NAMESPACE" generic "$APPLICATION_SECRET_NAME" \
      --from-env-file k8s_prefixed_variables -o yaml --dry-run |
      kubectl replace -n "$KUBE_NAMESPACE" --force -f -

    export APPLICATION_SECRET_CHECKSUM=$(cat k8s_prefixed_variables | sha256sum | cut -d ' ' -f 1)

    rm k8s_prefixed_variables
  }

before_script:
  - *deploy_helpers
