var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AdminRouter = (function (_React$Component) {
  _inherits(AdminRouter, _React$Component);

  function AdminRouter(props) {
    _classCallCheck(this, AdminRouter);

    _get(Object.getPrototypeOf(AdminRouter.prototype), "constructor", this).call(this, props);
    this.auth = new Auth();
    this.state = {
      result: undefined
    };
  }

  _createClass(AdminRouter, [{
    key: "handleAuthentication",
    value: function handleAuthentication(nextState, replace) {
      if (/access_token|id_token|error/.test(nextState.location.hash)) {
        this.auth.handleAuthentication();
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this = this;

      var Route = ReactRouter.Route;
      var Router = ReactRouterDOM.BrowserRouter;

      return React.createElement(
        Router,
        null,
        React.createElement(
          "div",
          null,
          React.createElement(Route, { path: "/admin", render: function (props) {
              return React.createElement(AdminPage, _extends({ auth: _this.auth }, props));
            } }),
          React.createElement(Route, { path: "/admin/callback", render: function (props) {
              _this.handleAuthentication(props);
              return React.createElement(Callback, props);
            } })
        )
      );
    }
  }]);

  return AdminRouter;
})(React.Component);