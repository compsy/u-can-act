{
  "swagger": "2.0",
  "info": {
    "title": "VSV V1",
    "version": "v1"
  },
  "basePath": "/api/v1",
  "paths": {
    "/basic_auth_api/person/show_list": {
      "get": {
        "summary": "Shows a list of persons",
        "tags": [
          "Person"
        ],
        "consumes": [
          "application/json"
        ],
        "security": [
          {
            "BasicAuth": {
            }
          }
        ],
        "parameters": [
          {
            "name": "person",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "person_auth0_ids": {
                  "type": "array"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "lists all people"
          },
          "401": {
            "description": "not authenticated"
          }
        }
      }
    },
    "/basic_auth_api/protocol_subscriptions": {
      "post": {
        "summary": "Creates a new protocol subscription",
        "tags": [
          "ProtocolSubscription"
        ],
        "consumes": [
          "application/json"
        ],
        "security": [
          {
            "BasicAuth": {
            }
          }
        ],
        "parameters": [
          {
            "name": "protocol_subscription",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "protocol_name": {
                  "type": "string"
                },
                "auth0_id_string": {
                  "type": "string"
                },
                "start_date": {
                  "type": "string"
                },
                "end_date": {
                  "type": "string"
                },
                "mentor_id": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "creates a protocol subscription"
          },
          "401": {
            "description": "not authenticated"
          }
        }
      }
    },
    "/basic_auth_api/protocol_subscriptions/{id}": {
      "patch": {
        "summary": "Updates a protocol subscription",
        "tags": [
          "ProtocolSubscription"
        ],
        "consumes": [
          "application/json"
        ],
        "security": [
          {
            "BasicAuth": {
            }
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "query",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "external_identifier": {
                  "type": "string"
                },
                "end_date": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updates a protocol subscription"
          },
          "401": {
            "description": "not authenticated"
          }
        }
      },
      "delete": {
        "summary": "Cancels a protocol subscription",
        "tags": [
          "ProtocolSubscription"
        ],
        "consumes": [
          "application/json"
        ],
        "security": [
          {
            "BasicAuth": {
            }
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "external_identifier",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "external_identifier": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "cancels a protocol subscription"
          },
          "401": {
            "description": "not authenticated"
          }
        }
      }
    },
    "/basic_auth_api/protocol_subscriptions/delegated_protocol_subscriptions": {
      "get": {
        "summary": "Lists all my students their protocolsubscriptions",
        "tags": [
          "ProtocolSubscription"
        ],
        "consumes": [
          "application/json"
        ],
        "security": [
          {
            "BasicAuth": {
            }
          }
        ],
        "parameters": [
          {
            "name": "external_identifier",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "all delegated protocol subscriptions returned",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "person_type": {
                    "type": "string"
                  },
                  "protocol_completion": {
                    "type": "array"
                  },
                  "earned_euros": {
                    "type": "number"
                  },
                  "max_still_awardable_euros": {
                    "type": "number"
                  },
                  "euro_delta": {
                    "type": "number"
                  },
                  "current_multiplier": {
                    "type": "number"
                  },
                  "max_streak": {
                    "type": "null"
                  },
                  "initial_multiplier": {
                    "type": "number"
                  },
                  "start_date": {
                    "type": "string"
                  },
                  "end_date": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "questionnaires": {
                    "type": "array"
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "auth0_id_string": {
                    "type": "string"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "state": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authenticated"
          }
        }
      }
    },
    "/basic_auth_api/protocol_subscriptions/destroy_delegated_protocol_subscriptions": {
      "delete": {
        "summary": "Cancels all protocol subscriptions with a certain external identifier for a user",
        "tags": [
          "ProtocolSubscription"
        ],
        "consumes": [
          "application/json"
        ],
        "security": [
          {
            "BasicAuth": {
            }
          }
        ],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "auth0_id_string": {
                  "type": "string"
                },
                "external_identifier": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "cancels protocol subscriptions"
          },
          "422": {
            "description": "external identifier not given"
          },
          "404": {
            "description": "person not found"
          },
          "401": {
            "description": "not authenticated"
          }
        }
      }
    },
    "/basic_auth_api/questionnaires": {
      "post": {
        "summary": "Creates a new questionnaire",
        "tags": [
          "Questionnaire"
        ],
        "consumes": [
          "application/json"
        ],
        "security": [
          {
            "BasicAuth": {
            }
          }
        ],
        "parameters": [
          {
            "name": "questionnaire",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "content": {
                  "type": "object"
                },
                "key": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "content",
                "key"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "A questionnaire was created."
          },
          "401": {
            "description": "Not authenticated."
          }
        }
      }
    },
    "/basic_auth_api/scheduling/daily_at_one_am": {
      "post": {
        "summary": "Runs the daily at 3 am jobs",
        "security": [
          {
            "BasicAuth": {
            }
          }
        ],
        "tags": [
          "Scheduling"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/basic_auth_api/scheduling/daily_at_two_am": {
      "post": {
        "summary": "Runs the daily at 3 am jobs",
        "tags": [
          "Scheduling"
        ],
        "security": [
          {
            "BasicAuth": {
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/basic_auth_api/scheduling/daily_at_three_am": {
      "post": {
        "summary": "Runs the daily at 3 am jobs",
        "tags": [
          "Scheduling"
        ],
        "security": [
          {
            "BasicAuth": {
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/basic_auth_api/scheduling/daily_at_four_am": {
      "post": {
        "summary": "Runs the daily at 4 am jobs",
        "tags": [
          "Scheduling"
        ],
        "security": [
          {
            "BasicAuth": {
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "No content"
          }
        }
      }
    },
    "/basic_auth_api/scheduling/daily": {
      "post": {
        "summary": "Runs the daily jobs",
        "tags": [
          "Scheduling"
        ],
        "security": [
          {
            "BasicAuth": {
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "No content"
          }
        }
      }
    },
    "/basic_auth_api/scheduling/hourly": {
      "post": {
        "summary": "Runs the hourly jobs",
        "tags": [
          "Scheduling"
        ],
        "security": [
          {
            "BasicAuth": {
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "No content"
          }
        }
      }
    },
    "/basic_auth_api/scheduling/thirty_minutely": {
      "post": {
        "summary": "Runs the 30 minutely jobs",
        "tags": [
          "Scheduling"
        ],
        "security": [
          {
            "BasicAuth": {
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "No content"
          }
        }
      }
    },
    "/basic_auth_api/scheduling/five_minutely": {
      "post": {
        "summary": "Runs the 5 minutely jobs",
        "tags": [
          "Scheduling"
        ],
        "security": [
          {
            "BasicAuth": {
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/basic_auth_api/scheduling/minutely": {
      "post": {
        "summary": "Runs the minutely jobs",
        "tags": [
          "Scheduling"
        ],
        "security": [
          {
            "BasicAuth": {
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "No content"
          }
        }
      }
    },
    "/person": {
      "put": {
        "summary": "Updates the current user",
        "tags": [
          "Person"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "person",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "mobile_phone": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "timestamp": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "security": [
          {
            "JwtAuth": {
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updates the current user if later timestamp is given",
            "schema": {
              "type": "object",
              "properties": {
                "first_name": {
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                },
                "gender": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "mobile_phone": {
                  "type": "string"
                },
                "timestamp": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "does not update the current user if older timestamp is given",
            "schema": {
              "type": "object",
              "properties": {
                "first_name": {
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                },
                "gender": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "mobile_phone": {
                  "type": "string"
                },
                "timestamp": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "not authenticated"
          }
        }
      }
    },
    "/person/me": {
      "get": {
        "summary": "Gets the current person",
        "tags": [
          "Person"
        ],
        "consumes": [
          "application/json"
        ],
        "security": [
          {
            "JwtAuth": {
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns the current person",
            "schema": {
              "type": "object",
              "properties": {
                "first_name": {
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                },
                "gender": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "mobile_phone": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "not authenticated"
          }
        }
      }
    },
    "/auth_user": {
      "post": {
        "summary": "Creates an auth user",
        "tags": [
          "Auth user"
        ],
        "consumes": [
          "application/json"
        ],
        "security": [
          {
            "JwtAuth": {
            }
          }
        ],
        "responses": {
          "200": {
            "description": "auth user created"
          },
          "401": {
            "description": "not authenticated"
          }
        }
      }
    },
    "/protocol": {
      "get": {
        "summary": "Lists all protocols",
        "tags": [
          "Protocols"
        ],
        "consumes": [
          "application/json"
        ],
        "security": [
          {
            "JwtAuth": {
            }
          }
        ],
        "responses": {
          "200": {
            "description": "auth user created",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "datetime"
                  },
                  "duration": {
                    "type": "integer"
                  },
                  "updated_at": {
                    "type": "datetime"
                  },
                  "invitation_text": {
                    "type": "string"
                  },
                  "informed_consent_questionnaire_id": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authenticated"
          }
        }
      }
    },
    "/protocol_subscriptions/mine": {
      "get": {
        "summary": "Lists all my active protocolsubscriptions filled out for myself",
        "tags": [
          "ProtocolSubscription"
        ],
        "consumes": [
          "application/json"
        ],
        "security": [
          {
            "JwtAuth": {
            }
          }
        ],
        "responses": {
          "200": {
            "description": "all my protocol subscriptions returned",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "person_type": {
                    "type": "string"
                  },
                  "protocol_completion": {
                    "type": "array"
                  },
                  "earned_euros": {
                    "type": "number"
                  },
                  "max_still_awardable_euros": {
                    "type": "number"
                  },
                  "euro_delta": {
                    "type": "number"
                  },
                  "current_multiplier": {
                    "type": "number"
                  },
                  "max_streak": {
                    "type": "null"
                  },
                  "initial_multiplier": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "questionnaires": {
                    "type": "array"
                  },
                  "first_name": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authenticated"
          }
        }
      }
    },
    "/protocol_subscriptions/my_active_and_inactive": {
      "get": {
        "summary": "Lists all my protocolsubscriptions",
        "tags": [
          "ProtocolSubscription"
        ],
        "consumes": [
          "application/json"
        ],
        "security": [
          {
            "JwtAuth": {
            }
          }
        ],
        "responses": {
          "200": {
            "description": "all my protocol subscriptions returned",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "person_type": {
                    "type": "string"
                  },
                  "protocol_completion": {
                    "type": "array"
                  },
                  "earned_euros": {
                    "type": "number"
                  },
                  "max_still_awardable_euros": {
                    "type": "number"
                  },
                  "euro_delta": {
                    "type": "number"
                  },
                  "current_multiplier": {
                    "type": "number"
                  },
                  "max_streak": {
                    "type": "null"
                  },
                  "initial_multiplier": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "questionnaires": {
                    "type": "array"
                  },
                  "first_name": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authenticated"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "JwtAuth": {
      "description": "The JWT token",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    },
    "BasicAuth": {
      "type": "basic"
    }
  }
}