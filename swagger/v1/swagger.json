{
  "swagger": "2.0",
  "info": {
    "title": "VSV V1",
    "version": "v1"
  },
  "basePath": "/api/v1",
  "paths": {
    "/basic_auth_api/person/show_list": {
      "get": {
        "summary": "Shows a list of persons",
        "tags": [
          "Person"
        ],
        "consumes": [
          "application/json"
        ],
        "security": [
          {
            "BasicAuth": {
            }
          }
        ],
        "parameters": [
          {
            "name": "person",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "person_auth0_ids": {
                  "type": "array"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "lists all people"
          },
          "401": {
            "description": "not authenticated"
          }
        }
      }
    },
    "/basic_auth_api/protocol_subscriptions": {
      "post": {
        "summary": "Creates a new protocol subscription",
        "tags": [
          "ProtocolSubscription"
        ],
        "consumes": [
          "application/json"
        ],
        "security": [
          {
            "BasicAuth": {
            }
          }
        ],
        "parameters": [
          {
            "name": "protocol_subscription",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "protocol_name": {
                  "type": "string"
                },
                "auth0_id_string": {
                  "type": "string"
                },
                "start_date": {
                  "type": "string"
                },
                "mentor_id": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "creates a protocol subscription"
          },
          "401": {
            "description": "not authenticated"
          }
        }
      }
    },
    "/person": {
      "put": {
        "summary": "Updates the current user",
        "tags": [
          "Person"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "person",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "mobile_phone": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "security": [
          {
            "JwtAuth": {
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updates the current user",
            "schema": {
              "type": "object",
              "properties": {
                "first_name": {
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                },
                "gender": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "mobile_phone": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "not authenticated"
          }
        }
      }
    },
    "/person/me": {
      "get": {
        "summary": "Gets the current person",
        "tags": [
          "Person"
        ],
        "consumes": [
          "application/json"
        ],
        "security": [
          {
            "JwtAuth": {
            }
          }
        ],
        "responses": {
          "200": {
            "description": "returns the current person",
            "schema": {
              "type": "object",
              "properties": {
                "first_name": {
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                },
                "gender": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "mobile_phone": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "not authenticated"
          }
        }
      }
    },
    "/auth_user": {
      "post": {
        "summary": "Creates an auth user",
        "tags": [
          "Auth user"
        ],
        "consumes": [
          "application/json"
        ],
        "security": [
          {
            "JwtAuth": {
            }
          }
        ],
        "responses": {
          "200": {
            "description": "auth user created"
          },
          "401": {
            "description": "not authenticated"
          }
        }
      }
    },
    "/protocol": {
      "get": {
        "summary": "Lists all protocols",
        "tags": [
          "Protocols"
        ],
        "consumes": [
          "application/json"
        ],
        "security": [
          {
            "JwtAuth": {
            }
          }
        ],
        "responses": {
          "200": {
            "description": "auth user created",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "datetime"
                  },
                  "duration": {
                    "type": "integer"
                  },
                  "updated_at": {
                    "type": "datetime"
                  },
                  "invitation_text": {
                    "type": "string"
                  },
                  "informed_consent_questionnaire_id": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authenticated"
          }
        }
      }
    },
    "/protocol_subscriptions/mine": {
      "get": {
        "summary": "Lists all my protocolsubscriptions",
        "tags": [
          "ProtocolSubscription"
        ],
        "consumes": [
          "application/json"
        ],
        "security": [
          {
            "JwtAuth": {
            }
          }
        ],
        "responses": {
          "200": {
            "description": "all my protocol subscriptions returned",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "person_type": {
                    "type": "string"
                  },
                  "protocol_completion": {
                    "type": "array"
                  },
                  "earned_euros": {
                    "type": "number"
                  },
                  "max_still_awardable_euros": {
                    "type": "number"
                  },
                  "euro_delta": {
                    "type": "number"
                  },
                  "current_multiplier": {
                    "type": "number"
                  },
                  "max_streak": {
                    "type": "null"
                  },
                  "initial_multiplier": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authenticated"
          }
        }
      }
    },
    "/protocol_subscriptions/delegated_protocol_subscriptions": {
      "get": {
        "summary": "Lists all my students their protocolsubscriptions",
        "tags": [
          "ProtocolSubscription"
        ],
        "consumes": [
          "application/json"
        ],
        "security": [
          {
            "JwtAuth": {
            }
          }
        ],
        "responses": {
          "200": {
            "description": "all my protocol subscriptions returned",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "person_type": {
                    "type": "string"
                  },
                  "protocol_completion": {
                    "type": "array"
                  },
                  "earned_euros": {
                    "type": "number"
                  },
                  "max_still_awardable_euros": {
                    "type": "number"
                  },
                  "euro_delta": {
                    "type": "number"
                  },
                  "current_multiplier": {
                    "type": "number"
                  },
                  "max_streak": {
                    "type": "null"
                  },
                  "initial_multiplier": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "401": {
            "description": "not authenticated"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "JwtAuth": {
      "description": "The JWT token",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    },
    "BasicAuth": {
      "description": "The basic auth token",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}